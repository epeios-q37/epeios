<?xml version="1.0" encoding="UTF-8"?>
<!-- For tools which deal with XDHTML interfaces -->
<xpp:bloc xmlns:xpp="http://q37.info/ns/xpp">
	<Definitions>
		<CustomItems>
			<AttributeNames>
				<Widget>data-xdh-widget</Widget>
				<Result>data-xdh-result</Result>
			</AttributeNames>
		</CustomItems>
		<Scripts>
			<Attribute>
				<Getter>
					<![CDATA[
							document.getElementById( "%Id%" ).getAttribute("%Name%");
						]]>
				</Getter>
				<Remover>
					<![CDATA[
							document.getElementById( "%Id%" ).removeAttribute( "%Name%" );
						]]>
				</Remover>
				<Setter>
					<![CDATA[
							document.getElementById( "%Id%" ).setAttribute("%Name%", "%Value%");
						]]>
				</Setter>
			</Attribute>
			<Content>
				<Getter>
					<![CDATA[
							getContent( "%Id%" );
						]]>
				</Getter>
				<Setter>
					<![CDATA[
							setContent( "%Id%", "%Value%" );
						]]>
				</Setter>
			</Content>
			<ElementFiller>
				<![CDATA[
						log( "'%Id%'" );
						log( "%XML%" );
						removeChildren( "%Id%" );
						document.getElementById( "%Id%" ).appendChild( transformToFragment( "%XML%", "%XSL%" ) );"";
						var digests = fetchEventHandlersAndWidgets( "%Id%" );
						digests;
					]]>
			</ElementFiller>
			<Dialog>
				<Alert>
					<![CDATA[
						// log( "%XML%" );
						dialog = document.createElement( "span" );
						dialog.innerHTML = transformToHTML( "%XML%", "%XSL%" );
						$(dialog).dialog({modal: true},{title: "%Title%"},{width: "auto"} ,{closeText: "%CloseText%"});
					]]>
				</Alert>
				<!-- Ugly. Will try to solve problem with the below alternative. -->
				<Confirm>
					<![CDATA[
							confirm( transformToText( "%XML%", "%XSL%" ).trim() );
					]]>
				</Confirm>
				<!--
						Below version doesn't work as is because of JS asynchronity,
						and the fact that the UI is refreshed only when the returning from event handler!
					-->
				<!--<Confirm>
						<![CDATA[
						var response;
						( function ()
						{
							var defer = $.Deferred();
							$.Zebra_Dialog(
								transformToHTML( "%XML%", "%XSL%" ),
								{
									type: 'question',
									'onClose': function(caption) { defer.resolve( caption ); },
									position: ['left','top'],
								}
							);
							return defer.promise();
						})().then( function (answer) {
								unlock( answer );
						} );
						]]>
					</Confirm>-->
			</Dialog>
			<!--<DraggableSetter>
				<![CDATA[
					var element = document.getElementById( "%Id%" );
					element.setAttribute( "draggable", "true" );
					jQuery( element ).draggable(
						{
							drag: function( event, ui )
							{
								log( "Drag" );
								if ( !drag ) {
								log( "!!!!" );
								var event = document.createEvent( "HTMLEvents" );
								event.initEvent("dragstart" );
								document.getElementById( "%Id%" ).dispatchEvent( event );
								drag = true;
								}
							}
						}
					);
				]]>
			</DraggableSetter>
			<DroppableSetter>
				<![CDATA[
					var element = document.getElementById( "%Id%" );
					element.setAttribute( "ondragover", "event.preventDefault();" );
					jQuery( element ).droppable(
						{
							drop: function( event, ui )
							{
								log( "Drop" );
								var event = document.createEvent( "HTMLEvents" );
								event.initEvent("drop" );
								document.getElementById( "%Id%" ).dispatchEvent( event );
								drag = false;
							}
						}
					);
				]]>
			</DroppableSetter>-->
			<DraggableSetter>
				<![CDATA[
				var element = document.getElementById( "%Id%" );
//				element.setAttribute( "draggable", "true" );
				if ( false )
					interact( element ).draggable(
						{
						}
					)
					.on( 'dragstart', function( event ) { log( 'dragstart' ); event.stopImmediatePropagation(); launchEvent( event.target, "dragstart" ); } )
					.on( 'dragend', function( event ) { log( 'dragend' ); launchEvent( event.target, "dragend" ); } )
					.on( 'click', function( event ) { log( '-->click' );event.stopImmediatePropagation();event.stopPropagation(); } )
					;
				]]>
			</DraggableSetter>
			<DroppableSetter>
				<![CDATA[
				var element = document.getElementById( "%Id%" );
//				element.setAttribute( "ondragover", "event.preventDefault();" );
				if ( false )
					interact( element ).dropzone(
						{
						}
					)
					.on( 'drop', function( event ) { log( 'drop : ' + event.target.id + " ; " + event.relatedTarget.id ); launchEvent( event.target, "drop" );} );
				]]>

			</DroppableSetter>
			<DocumentFiller>
				<![CDATA[
					log( "Document !" );
					log( "%XML%" );
					removeChildren( "Root" );
					document.getElementById( "Root" ).appendChild( transformToFragment( "%XML%", "%XSL%" ) );"";
					var digests = fetchEventHandlersAndWidgets( "Root" );
					digests;
//					document.documentElement.innerHTML = transformToHTML( "%XML%", "%XSL%" );
//					var digests = fetchEventHandlersAndWidgets( "" );
//					digests;
				]]>
			</DocumentFiller>
			<CastingsFiller>
				<![CDATA[
					// Edge executes this script in loop !!!
					log( "Casting : '%Id%'" );
					log( "%XML%" );
					removeCastingChildren( document );
					document.getElementById( "xdh-castings" ).appendChild( transformToFragment( "%XML%", "%XSL%" ) );
					var castings = fetchCastings( "%Id%" );
					castings;
				]]>
			</CastingsFiller>
			<EventHandlersSetter>
				<![CDATA[
					setEventHandlers( %Ids_%, %Events_% );
				]]>
			</EventHandlersSetter>
			<WidgetsInstantiator>
				<![CDATA[
					instantiateWidgets( %Ids_%, %Types_%, %ParametersSets_% );
				]]>
			</WidgetsInstantiator>
			<CastsSetter>
				<![CDATA[
					setCasts( %Ids_%, %Casts_% );
				]]>
			</CastsSetter>
			<!--<EventHandler>
				<![CDATA[
//						document.getElementById( "%Id%" ).setAttribute( "on%Event%", "handleEvent( event );" );	// Seems not to work under 'CEF'.
//						document.getElementById( "%Id%" ).on%Event%=handleEvent;
						document.getElementById( "%Id%" ).addEventListener( "%Event%", handleEvent );
					]]>
			</EventHandler>-->
   <Focuser>
    <![CDATA[
						jQuery(document.getElementById( "%Id%" )).focus();
					]]>
   </Focuser>
   <Selector>
    <![CDATA[
						jQuery(document.getElementById( "%Id%" )).select();
					]]>
   </Selector>
   <Log>
				<![CDATA[
						log( "%Message%" );
					]]>
			</Log>
			<Property>
				<Getter>
					<![CDATA[
							document.getElementById( "%Id%" ).%Name_%;
						]]>
				</Getter>
				<Setter>
					<![CDATA[
							document.getElementById( "%Id%" ).%Name_% = %Value_%;
						]]>
				</Setter>
			</Property>
			<Widget>
				<ContentRetriever>
					<![CDATA[
							jQuery( document.getElementById( "%Id%") ).%Method_%
						]]>
				</ContentRetriever>
    <Focuser>
     <![CDATA[
							jQuery( document.getElementById( "%Id%") ).%Method_%
						]]>
    </Focuser>
    <Selector>
     <![CDATA[
							jQuery( document.getElementById( "%Id%") ).%Method_%
						]]>
    </Selector>
   </Widget>
		</Scripts>
	</Definitions>
</xpp:bloc>